// <auto-generated />
using System;
using BAITAP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BAITAP.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BAITAP.Models.Chucvu", b =>
                {
                    b.Property<int>("Macv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MACV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Macv"));

                    b.Property<double?>("Heso")
                        .HasColumnType("float")
                        .HasColumnName("HESO");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TEN");

                    b.HasKey("Macv")
                        .HasName("PK__CHUCVU__603F18344188813A");

                    b.ToTable("CHUCVU", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.CtKhuyenMai", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal>("DieuKienApDung")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("GiaGiam")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("MaLoaiKm")
                        .HasColumnType("int")
                        .HasColumnName("MaLoaiKM");

                    b.Property<string>("MoTa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("date");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("date");

                    b.Property<int?>("NhomSpkhuyemai")
                        .HasColumnType("int")
                        .HasColumnName("NhomSPKhuyemai");

                    b.Property<int>("PhanTramGiamGia")
                        .HasColumnType("int");

                    b.Property<int>("Soluongmuatoithieu")
                        .HasColumnType("int");

                    b.Property<int>("Soluongsudung")
                        .HasColumnType("int");

                    b.Property<int>("Sotienmuatoithieu")
                        .HasColumnType("int");

                    b.Property<string>("TenKm")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TenKM");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__CT_Khuye__3214EC2766AA2C03");

                    b.HasIndex("MaLoaiKm");

                    b.HasIndex("NhomSpkhuyemai");

                    b.ToTable("CT_KhuyenMai", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.CtKhuyenMaiSanPham", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("MaCtkm")
                        .HasColumnType("int")
                        .HasColumnName("MaCTKM");

                    b.Property<int>("Mamh")
                        .HasColumnType("int")
                        .HasColumnName("mamh");

                    b.Property<int>("Phantramkhuyenmai")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__CT_Khuye__3214EC2764208017");

                    b.HasIndex("MaCtkm");

                    b.HasIndex("Mamh");

                    b.ToTable("CT_KhuyenMai_SanPham", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.Cthoadon", b =>
                {
                    b.Property<int>("Macthd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MACTHD");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Macthd"));

                    b.Property<int?>("Dongia")
                        .HasColumnType("int")
                        .HasColumnName("DONGIA");

                    b.Property<int>("Mahd")
                        .HasColumnType("int")
                        .HasColumnName("MAHD");

                    b.Property<int>("Mamh")
                        .HasColumnType("int")
                        .HasColumnName("MAMH");

                    b.Property<int?>("Soluong")
                        .HasColumnType("int")
                        .HasColumnName("SOLUONG");

                    b.Property<int?>("Thanhtien")
                        .HasColumnType("int")
                        .HasColumnName("THANHTIEN");

                    b.HasKey("Macthd")
                        .HasName("PK__CTHOADON__F50CB4CB4C99E6E6");

                    b.HasIndex("Mahd");

                    b.HasIndex("Mamh");

                    b.ToTable("CTHOADON", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.Danhmuc", b =>
                {
                    b.Property<int>("MaDm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaDM");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDm"));

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaDm")
                        .HasName("PK__DANHMUC__2725866E7D416BF5");

                    b.ToTable("DANHMUC", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.Diachi", b =>
                {
                    b.Property<int>("MaDc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaDC");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDc"));

                    b.Property<string>("Diachi1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DIACHI");

                    b.Property<int>("Macdinh")
                        .HasColumnType("int")
                        .HasColumnName("MACDINH");

                    b.Property<int>("Makh")
                        .HasColumnType("int")
                        .HasColumnName("MAKH");

                    b.Property<string>("Phuongxa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PHUONGXA");

                    b.Property<string>("Quanhuyen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("QUANHUYEN");

                    b.Property<string>("Tinhthanh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TINHTHANH");

                    b.HasKey("MaDc")
                        .HasName("PK__DIACHI__2725866496086918");

                    b.HasIndex("Makh");

                    b.ToTable("DIACHI", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.Hoadon", b =>
                {
                    b.Property<int>("Mahd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MAHD");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Mahd"));

                    b.Property<string>("Diachi")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Makh")
                        .HasColumnType("int")
                        .HasColumnName("MAKH");

                    b.Property<DateTime?>("Ngay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NGAY")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Quanhuyen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Sodienthoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tennguoinhan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tinh")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Tongtien")
                        .HasColumnType("int")
                        .HasColumnName("TONGTIEN");

                    b.Property<int>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("TRANGTHAI");

                    b.Property<string>("Xaphuong")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Mahd")
                        .HasName("PK__HOADON__603F20CE173D75A8");

                    b.HasIndex("Makh");

                    b.ToTable("HOADON", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.Khachhang", b =>
                {
                    b.Property<int>("MaKh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaKH");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKh"));

                    b.Property<string>("Dienthoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DIENTHOAI");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Matkhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MATKHAU");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKh")
                        .HasName("PK__KHACHHAN__2725CF1E4FFE67E7");

                    b.ToTable("KHACHHANG", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.LoaiKhuyenMai", b =>
                {
                    b.Property<int>("MaLoaiKm")
                        .HasColumnType("int")
                        .HasColumnName("MaLoaiKM");

                    b.Property<string>("TenLoaiKm")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TenLoaiKM");

                    b.HasKey("MaLoaiKm")
                        .HasName("PK__LoaiKhuy__12250B73F703077B");

                    b.ToTable("LoaiKhuyenMai", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.Mathang", b =>
                {
                    b.Property<int>("MaMh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaMH");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMh"));

                    b.Property<string>("Chatlieu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Donvitinh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("GiaBan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("GiaGoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("Iskhuyemmai")
                        .HasColumnType("bit");

                    b.Property<string>("Kichco")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("LuotMua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LuotXem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("MaDm")
                        .HasColumnType("int")
                        .HasColumnName("MaDM");

                    b.Property<int?>("MaMhchinh")
                        .HasColumnType("int")
                        .HasColumnName("MaMHCHINH");

                    b.Property<string>("Mausac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("Ngaycapnhat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Ngaytao")
                        .HasColumnType("datetime");

                    b.Property<int>("SoLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Trangthai")
                        .HasColumnType("int")
                        .HasColumnName("trangthai");

                    b.HasKey("MaMh")
                        .HasName("PK__MATHANG__2725DFD9A470EBC7");

                    b.HasIndex("MaDm");

                    b.ToTable("MATHANG", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.Mh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Hinhanh")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("HINHANH")
                        .HasDefaultValueSql("('Chua có ?nh')");

                    b.Property<DateTime>("Ngaycapnhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NGAYCAPNHAT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("Ngaytao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("NGAYTAO")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TEN");

                    b.HasKey("Id")
                        .HasName("PK__MH__3214EC27B1017620");

                    b.ToTable("MH", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.Nhanvien", b =>
                {
                    b.Property<int>("Manv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MANV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Manv"));

                    b.Property<string>("Dienthoai")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DIENTHOAI");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("Macv")
                        .HasColumnType("int")
                        .HasColumnName("MACV");

                    b.Property<string>("Matkhau")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MATKHAU");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TEN");

                    b.HasKey("Manv")
                        .HasName("PK__NHANVIEN__603F51144B34CABD");

                    b.HasIndex("Macv");

                    b.ToTable("NHANVIEN", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BAITAP.Models.CtKhuyenMai", b =>
                {
                    b.HasOne("BAITAP.Models.LoaiKhuyenMai", "MaLoaiKmNavigation")
                        .WithMany("CtKhuyenMais")
                        .HasForeignKey("MaLoaiKm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_KhuyenMai_LoaiKhuyenMai");

                    b.HasOne("BAITAP.Models.Danhmuc", "NhomSpkhuyemaiNavigation")
                        .WithMany("CtKhuyenMais")
                        .HasForeignKey("NhomSpkhuyemai")
                        .HasConstraintName("FK_KhuyenMai_NhomSP");

                    b.Navigation("MaLoaiKmNavigation");

                    b.Navigation("NhomSpkhuyemaiNavigation");
                });

            modelBuilder.Entity("BAITAP.Models.CtKhuyenMaiSanPham", b =>
                {
                    b.HasOne("BAITAP.Models.CtKhuyenMai", "MaCtkmNavigation")
                        .WithMany("CtKhuyenMaiSanPhams")
                        .HasForeignKey("MaCtkm")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CTKM_KhuyenMai");

                    b.HasOne("BAITAP.Models.Mathang", "MamhNavigation")
                        .WithMany("CtKhuyenMaiSanPhams")
                        .HasForeignKey("Mamh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CTKM_SanPham");

                    b.Navigation("MaCtkmNavigation");

                    b.Navigation("MamhNavigation");
                });

            modelBuilder.Entity("BAITAP.Models.Cthoadon", b =>
                {
                    b.HasOne("BAITAP.Models.Hoadon", "MahdNavigation")
                        .WithMany("Cthoadons")
                        .HasForeignKey("Mahd")
                        .IsRequired()
                        .HasConstraintName("FK__CTHOADON__MAHD__398D8EEE");

                    b.HasOne("BAITAP.Models.Mathang", "MamhNavigation")
                        .WithMany("Cthoadons")
                        .HasForeignKey("Mamh")
                        .IsRequired()
                        .HasConstraintName("FK__CTHOADON__MAMH__3A81B327");

                    b.Navigation("MahdNavigation");

                    b.Navigation("MamhNavigation");
                });

            modelBuilder.Entity("BAITAP.Models.Diachi", b =>
                {
                    b.HasOne("BAITAP.Models.Khachhang", "MakhNavigation")
                        .WithMany("Diachis")
                        .HasForeignKey("Makh")
                        .IsRequired()
                        .HasConstraintName("FK__DIACHI__MAKH__3B75D760");

                    b.Navigation("MakhNavigation");
                });

            modelBuilder.Entity("BAITAP.Models.Hoadon", b =>
                {
                    b.HasOne("BAITAP.Models.Khachhang", "MakhNavigation")
                        .WithMany("Hoadons")
                        .HasForeignKey("Makh")
                        .IsRequired()
                        .HasConstraintName("FK__HOADON__MAKH__3C69FB99");

                    b.Navigation("MakhNavigation");
                });

            modelBuilder.Entity("BAITAP.Models.Mathang", b =>
                {
                    b.HasOne("BAITAP.Models.Danhmuc", "Danhmucs")
                        .WithMany("Mathangs")
                        .HasForeignKey("MaDm")
                        .IsRequired()
                        .HasConstraintName("FK__MATHANG__MaDM__3D5E1FD2");

                    b.Navigation("Danhmucs");
                });

            modelBuilder.Entity("BAITAP.Models.Nhanvien", b =>
                {
                    b.HasOne("BAITAP.Models.Chucvu", "MacvNavigation")
                        .WithMany("Nhanviens")
                        .HasForeignKey("Macv")
                        .IsRequired()
                        .HasConstraintName("FK__NHANVIEN__MACV__3E52440B");

                    b.Navigation("MacvNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BAITAP.Models.Chucvu", b =>
                {
                    b.Navigation("Nhanviens");
                });

            modelBuilder.Entity("BAITAP.Models.CtKhuyenMai", b =>
                {
                    b.Navigation("CtKhuyenMaiSanPhams");
                });

            modelBuilder.Entity("BAITAP.Models.Danhmuc", b =>
                {
                    b.Navigation("CtKhuyenMais");

                    b.Navigation("Mathangs");
                });

            modelBuilder.Entity("BAITAP.Models.Hoadon", b =>
                {
                    b.Navigation("Cthoadons");
                });

            modelBuilder.Entity("BAITAP.Models.Khachhang", b =>
                {
                    b.Navigation("Diachis");

                    b.Navigation("Hoadons");
                });

            modelBuilder.Entity("BAITAP.Models.LoaiKhuyenMai", b =>
                {
                    b.Navigation("CtKhuyenMais");
                });

            modelBuilder.Entity("BAITAP.Models.Mathang", b =>
                {
                    b.Navigation("CtKhuyenMaiSanPhams");

                    b.Navigation("Cthoadons");
                });
#pragma warning restore 612, 618
        }
    }
}
